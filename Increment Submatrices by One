// You are given a positive integer n, indicating that we initially have an n x n 0-indexed integer matrix mat filled with zeroes.

// You are also given a 2D integer array query. For each query[i] = [row1i, col1i, row2i, col2i], you should do the following operation:

// Add 1 to every element in the submatrix with the top left corner (row1i, col1i) and the bottom right corner (row2i, col2i). That is, add 1 to mat[x][y] for for all row1i <= x <= row2i and col1i <= y <= col2i.
// Return the matrix mat after performing every query.
class Solution {
public:
    vector<vector<int>> rangeAddQueries(int n, vector<vector<int>>& queries) {
        vector<vector<int>>ans(n,vector<int>(n,0));
             for(auto it:queries){
                    int x1 = it[0];
                    int y1 = it[1];
                    int x2 = it[2];
                    int y2 = it[3];
                    for(int i=x1;i<=x2;i++){
                        ans[i][y1]++;
                        if(1+y2!=n)ans[i][y2+1]--;
                    }
                }
            for(int i=0;i<n;i++){
                for(int j=1;j<n;j++){
                    ans[i][j]+=ans[i][j-1];
                }
            }
        return ans;

    }
};
