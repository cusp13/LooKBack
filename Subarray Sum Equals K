// Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

// A subarray is a contiguous non-empty sequence of elements within an array.

// Example 1:

// Input: nums = [1,1,1], k = 2
// Output: 2

class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int sum=0;
        int cnt=0;
        map<int,int>mp;
        mp[0]=1;
        for(int i=0;i<n;i++){
           sum+=nums[i];
           if(mp.find(sum-k)!=mp.end()){
              cnt+=mp[sum-k];
            }
           mp[sum]++;
         }
        return cnt;
    }
};
